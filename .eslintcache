[{"C:\\Users\\17322\\Desktop\\messenger-app\\src\\index.js":"1","C:\\Users\\17322\\Desktop\\messenger-app\\src\\components\\App.js":"2","C:\\Users\\17322\\Desktop\\messenger-app\\src\\components\\Login.js":"3","C:\\Users\\17322\\Desktop\\messapp\\src\\index.js":"4","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\App.js":"5","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Login.js":"6","C:\\Users\\17322\\Desktop\\messapp\\src\\hooks\\useLocalStorage.js":"7","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Dashboard.js":"8","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Sidebar.js":"9","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Conversations.js":"10","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Contacts.js":"11","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\NewContactModal.js":"12","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\NewConversationModal.js":"13","C:\\Users\\17322\\Desktop\\messapp\\src\\contexts\\ContactsProvider.js":"14","C:\\Users\\17322\\Desktop\\messapp\\src\\contexts\\ConversationsProvider.js":"15","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\OpenConversation.js":"16"},{"size":255,"mtime":1611115654429,"results":"17","hashOfConfig":"18"},{"size":221,"mtime":1611116621676,"results":"19","hashOfConfig":"18"},{"size":918,"mtime":1611116780418,"results":"20","hashOfConfig":"18"},{"size":255,"mtime":1611118600284,"results":"21","hashOfConfig":"22"},{"size":614,"mtime":1611130728193,"results":"23","hashOfConfig":"22"},{"size":918,"mtime":1611116780418,"results":"24","hashOfConfig":"22"},{"size":648,"mtime":1611118806794,"results":"25","hashOfConfig":"22"},{"size":475,"mtime":1611129736201,"results":"26","hashOfConfig":"22"},{"size":2221,"mtime":1611122135429,"results":"27","hashOfConfig":"22"},{"size":642,"mtime":1611129096822,"results":"28","hashOfConfig":"22"},{"size":428,"mtime":1611124162590,"results":"29","hashOfConfig":"22"},{"size":1116,"mtime":1611123320884,"results":"30","hashOfConfig":"22"},{"size":1783,"mtime":1611128154798,"results":"31","hashOfConfig":"22"},{"size":702,"mtime":1611123332208,"results":"32","hashOfConfig":"22"},{"size":3070,"mtime":1611131554524,"results":"33","hashOfConfig":"22"},{"size":2345,"mtime":1611132706384,"results":"34","hashOfConfig":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"18zaof6",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"14rtrlm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\17322\\Desktop\\messenger-app\\src\\index.js",[],["71","72"],"C:\\Users\\17322\\Desktop\\messenger-app\\src\\components\\App.js",[],"C:\\Users\\17322\\Desktop\\messenger-app\\src\\components\\Login.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\index.js",[],["73","74"],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\App.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Login.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Dashboard.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Sidebar.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Conversations.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\Contacts.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\NewContactModal.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\components\\NewConversationModal.js",[],"C:\\Users\\17322\\Desktop\\messapp\\src\\contexts\\ContactsProvider.js",["75"],"import userEvent from '@testing-library/user-event';\r\nimport React, { useContext } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\n\r\nconst ContactsContext = React.createContext()\r\n\r\nexport function useContacts() {\r\n    return useContext(ContactsContext)\r\n}\r\n\r\nexport function ContactsProvider({ children }) {\r\nconst [contacts, setContacts] = useLocalStorage('contacts', [])\r\n\r\nfunction createContact(id, name) {\r\n    setContacts(prevContacts => {\r\n        return [...prevContacts, { id, name }]\r\n    })\r\n}\r\n\r\n    return (\r\n        <ContactsContext.Provider value={{ contacts, createContact }}>\r\n{children}\r\n\r\n        </ContactsContext.Provider>\r\n            \r\n     \r\n    )\r\n}\r\n","C:\\Users\\17322\\Desktop\\messapp\\src\\contexts\\ConversationsProvider.js",["76"],"import userEvent from '@testing-library/user-event';\r\nimport React, { useContext, useState} from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport { useContacts } from './ContactsProvider'\r\n\r\n\r\nconst ConversationsContext = React.createContext()\r\n\r\nexport function useConversations() {\r\n    return useContext(ConversationsContext)\r\n}\r\n\r\nexport function ConversationsProvider({ id, children }) {\r\nconst [conversations, setConversations] = useLocalStorage('conversations', [])\r\nconst [selectedConversationIndex, setSelectedConversationIndex] =\r\nuseState(0)\r\n\r\nconst { contacts } = useContacts()\r\n\r\nfunction createConversation(recipients) {\r\n    setConversations(prevConversations => {\r\n        return [...prevConversations, { recipients, messages: [] }]\r\n    })\r\n}\r\n\r\nfunction addMessageToConversation({ recipients, text, sender }) {\r\n    setConversations(prevConversations => {\r\n        let madeChange = false\r\n        const newMessage = { sender, text}\r\n        const newConversations = prevConversations.map(conversation => {\r\n            if (arrayEquality(conversation.recipients, recipients)) {\r\n                madeChange = true \r\n                return { ...conversations, message: [conversation.messages, newMessage]\r\n                }\r\n            }\r\n\r\n            return conversation\r\n\r\n        })\r\n\r\n\r\n        if (madeChange) {\r\n            return newConversations\r\n\r\n        } else {\r\n            return [...prevConversations,\r\n                 { recipients, messages: [newMessage] }]\r\n        }\r\n    })\r\n\r\n}\r\n\r\nfunction sendMessage(recipients, text) {\r\n    addMessageToConversation({ recipients, text, sender: id })\r\n}\r\n\r\nconst formattedConversations = conversations.map((conversation, index) => {\r\n    const recipients = conversation.recipients.map(recipient => {\r\n        const contact = contacts.find(contact => {\r\n            return contact.id === recipient \r\n        })\r\n        const name = (contact && contact.name) || recipient \r\n        return { id: recipient, name }\r\n    })\r\n    const messages = conversation.messages.map(message => {\r\nconst contact = contacts.find(contact => {\r\n    return contact.id === message.sender\r\n})\r\nconst name = (contact && contact.name) || message.sender\r\nconst fromMe = id === message.sender\r\nreturn { ...message, senderName: name, fromMe }\r\n    })\r\n\r\n    const selected = index === selectedConversationIndex\r\n    return { ...conversation, messages, recipients, selected }\r\n})\r\n\r\nconst value = {\r\n    conversations: formattedConversations,\r\n    selectedConversation: formattedConversations\r\n    [selectedConversationIndex],\r\n    sendMessage,\r\n    selectConversationIndex: setSelectedConversationIndex,\r\n     createConversation\r\n}\r\n\r\n\r\n    return (\r\n        <ConversationsContext.Provider value={value}>\r\n{children}\r\n\r\n        </ConversationsContext.Provider>\r\n            \r\n     \r\n    )\r\n}\r\n\r\nfunction arrayEquality(a, b) {\r\n    if (a.length !== b.length) return false\r\n    a.sort()\r\n    b.sort()\r\n\r\n    return a.every((element, index ) => {\r\n        return element === b[index]\r\n    })\r\n    \r\n}\r\n","C:\\Users\\17322\\Desktop\\messapp\\src\\components\\OpenConversation.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":17},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],"no-unused-vars","'userEvent' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]